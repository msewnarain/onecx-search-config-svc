openapi: "3.0.3"
info:
  title: onecx-search-config-svc-v1
  version: "1.0"
servers:
  - url: https://localhost:8080
tags:
  - name: SearchConfigV1
    description: Search Config Service v1 RS API
paths:
  /v1/searchConfig/{configId}:
    put:
      tags:
        - SearchConfigV1
      summary: Updates the search config
      description: Updates the search config
      operationId: updateSearchConfig
      parameters:
        - name: configId
          in: path
          description: ConfigId for the search config to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated values for the specified search config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSearchConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSearchConfigResponse'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
    delete:
      tags:
        - SearchConfigV1
      summary: Deletes the search config
      description: Deletes the search config
      operationId: deleteSearchConfig
      requestBody:
        description: Creates a new search config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSearchConfigRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /v1/searchConfig/{page}:
    get:
      tags:
        - SearchConfigV1
      summary: Gets the search configs for the specified page.
      description: The search config for the page is returned.
      operationId: getSearchConfigs
      parameters:
        - name: page
          in: path
          description: Value of the page queried
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchConfigsResponse'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  /v1/searchConfig/:
    post:
      tags:
        - SearchConfigV1
      summary: Creates a new search config
      description: Creates a new search config
      operationId: createSearchConfig
      requestBody:
        description: Creates a new search config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSearchConfigRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSearchConfigResponse'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  /v1/internal/searchConfigs/search/criteria:
    post:
      tags:
        - SearchConfigV1
      summary: Finds search configs by criteria.
      description: The search configs are found by search criteria.
      operationId: findBySearchCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfigSearchCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchConfig'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    SearchConfig:
      type: object
      required:
        - 'id'
        - 'page'
        - 'name'
        - 'modificationCount'
        - 'fieldListVersion'
        - 'isReadonly'
        - 'isAdvanced'
        - 'columns'
        - 'values'
      properties:
        id:
          type: string
        page:
          type: string
        name:
          type: string
        modificationCount:
          type: integer
        application:
          type: string
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.
        isReadonly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string
    GetSearchConfigsResponse:
      type: object
      required:
        - 'configs'
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/SearchConfig'
    CreateSearchConfigRequest:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    CreateSearchConfigResponse:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    UpdateSearchConfigRequest:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    UpdateSearchConfigResponse:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    SearchConfigSearchCriteria:
      type: object
      properties:
        name:
          type: string
        application:
          type: string
        page:
          type: string
    DeleteSearchConfigRequest:
      type: object
      properties:
        name:
          type: string
        page:
          type: string
        application:
          type: string
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string

