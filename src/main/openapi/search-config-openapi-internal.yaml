openapi: "3.0.3"
info:
  title: onecx-search-config-svc
  version: "1.0"
servers:
  - url: https://localhost:8080
tags:
  - name: SearchConfigInternal
    description: Execute Search Config CRUD operations
paths:
  /internal/searchConfig:
    post:
      tags:
        - SearchConfigInternal
      summary: Creates the search config.
      description: Creates the search config.
      operationId: createSearchConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSearchConfigRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfig'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /internal/searchConfig/search:
    post:
      tags:
        - SearchConfigInternal
      summary: Finds search configs by criteria.
      description: The search configs are found by search criteria.
      operationId: findBySearchCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfigSearchRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchConfigResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /internal/searchConfig/{configId}:
    get:
      tags:
        - SearchConfigInternal
      summary: Finds search configs by it's id.
      description: Gets the search config by it's id.
      operationId: getSearchConfigById
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfig'
    put:
      tags:
        - SearchConfigInternal
      summary: Updates the search config.
      description: Updates the search config.
      operationId: updateSearchConfig
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSearchConfigRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfig'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    delete:
      tags:
        - SearchConfigInternal
      summary: Deletes the search config.
      description: Deletes the search config.
      operationId: deleteSearchConfig
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Config deleted
components:
  schemas:
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    SearchConfig:
      type: object
      properties:
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        application:
          type: string
        page:
          type: string
        name:
          type: string
        apiVersion:
          type: string
        columns:
          type: array
          items:
            type: string
        values:
          type: object
          additionalProperties:
            type: string
        modificationCount:
          format: int32
          type: integer
        fieldListVersion:
          type: integer
          description: Version increment of the fields in the UI which you should use when you are making incompatible changes to those fields.
        isReadOnly:
          type: boolean
          description: Defines whether this config can be changed in the UI
        isAdvanced:
          type: boolean
          description: Indicates whether the advanced mode should be displayed
    CreateSearchConfigRequest:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    SearchConfigSearchRequest:
      type: object
      properties:
        name:
          type: string
        application:
          type: string
        page:
          type: string
    UpdateSearchConfigRequest:
      type: object
      required:
        - 'config'
      properties:
        config:
          $ref: '#/components/schemas/SearchConfig'
    GetSearchConfigResponse:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/SearchConfig'
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string